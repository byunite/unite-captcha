class i{constructor(r="captchaServiceWorker.js"){this.registerServiceWorker(r)}registerServiceWorker(r){this.serviceWorker||(this.serviceWorker=new Worker(r),this.serviceWorker.addEventListener("message",s=>{const{data:e}=s;switch(e.cmd){case"solution":this.solveResolve(e.args);break;case"error":this.solveReject(e.args);break;default:console.log(e);break}}))}async solve(r,s,e,t){if(!this.serviceWorker)throw"ServiceWorker not initialized!";return new Promise((o,a)=>{this.solveResolve=o,this.solveReject=a,this.serviceWorker.postMessage({cmd:"start",args:{timeStamp:r,targetHash:s,puzzle:e,puzzleStrength:t}})})}}const v=new i("/dist/captchaServiceWorker.js");v.solve(1640797286,"541457e130c3243dec6cfdd80dd1a329995eda8f81f207c175a2ffcb40917616","c3ae8499246cc17ab13f19ad3f71f7363d33ed339e4bbe6b918fcb4a6af0",17).then(c=>{console.log(c)});
